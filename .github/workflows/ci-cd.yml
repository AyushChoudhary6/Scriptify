name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Backend Image
        run: |
          docker build -t ayushchoudhary6/scriptify-backend:latest ./backend
          docker push ayushchoudhary6/scriptify-backend:latest

      - name: Build & Push Frontend Image
        run: |
          docker build -t ayushchoudhary6/scriptify-frontend:latest ./frontend
          docker push ayushchoudhary6/scriptify-frontend:latest

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Create Kind Cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: scriptify-cluster
          node_image: kindest/node:v1.27.0

      - name: Install nginx ingress controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=90s

      - name: Configure kubectl
        run: |
          # For cloud clusters, you'll need to add cluster credentials as secrets
          # Example for different cloud providers:
          # AWS EKS: aws eks update-kubeconfig --region us-west-2 --name my-cluster
          # GCP GKE: gcloud container clusters get-credentials my-cluster --zone us-central1-a
          # Azure AKS: az aks get-credentials --resource-group myResourceGroup --name myAKSCluster
          echo "‚ö†Ô∏è  Kubernetes cluster credentials needed in GitHub secrets"
          echo "üìã Current setup is for demonstration - add real cluster config"

      - name: Deploy to Kubernetes
        uses: azure/k8s-deploy@v4
        with:
          manifests: |
            k8s/backend-deployment.yml
            k8s/frontend-deployment.yml
            k8s/backend-service.yml
            k8s/frontend-service.yml
            k8s/ingress.yml
            k8s/hpa.yml
          namespace: default
        continue-on-error: true  # Won't fail if no cluster access

      - name: Get App URL
        run: |
          echo "App deployed successfully!"
          echo "Access via: kubectl port-forward -n ingress-nginx svc/ingress-nginx-controller 8080:80"
          echo "Then visit: http://localhost:8080"
