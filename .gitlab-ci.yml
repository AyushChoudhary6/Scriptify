stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE_BACKEND: ayushchoudhary6/scriptify-backend:latest
  DOCKER_IMAGE_FRONTEND: ayushchoudhary6/scriptify-frontend:latest
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

# Global rules to ensure pipeline triggers
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"

# 1Ô∏è‚É£ Build Backend
build-backend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"
  before_script:
    - echo "Current branch:" $CI_COMMIT_BRANCH
    - echo "Pipeline source:" $CI_PIPELINE_SOURCE
    - echo "Commit SHA:" $CI_COMMIT_SHA
    - docker --version
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - echo "=== Building Backend Image ==="
    - docker build -t $DOCKER_IMAGE_BACKEND ./backend
    - echo "=== Pushing Backend Image ==="
    - docker push $DOCKER_IMAGE_BACKEND

# 2Ô∏è‚É£ Build Frontend
build-frontend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"
  before_script:
    - echo "Current branch:" $CI_COMMIT_BRANCH
    - echo "Pipeline source:" $CI_PIPELINE_SOURCE
    - docker --version
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - echo "=== Building Frontend Image ==="
    - docker build -t $DOCKER_IMAGE_FRONTEND ./frontend
    - echo "=== Pushing Frontend Image ==="
    - docker push $DOCKER_IMAGE_FRONTEND

# 3Ô∏è‚É£Deploy to Kubernetes
deploy:
  stage: deploy
  image: alpine/k8s:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"
  before_script:
    - echo "Current branch:" $CI_COMMIT_BRANCH
    - echo "Pipeline source:" $CI_PIPELINE_SOURCE
    - echo "=== Deployment simulation - Kubernetes cluster not available in shared runners ==="
  script:
    - echo "=== Simulating Kubernetes Deployment ==="
    - echo "‚úÖ Would apply k8s/ configurations"
    - echo "‚úÖ Would restart backend-deployment"
    - echo "‚úÖ Would restart frontend-deployment"
    - echo "‚úÖ Deployment would be complete"
    - echo "=== Build and push completed successfully ==="
    - echo "üì¶ Backend image:" $DOCKER_IMAGE_BACKEND
    - echo "üì¶ Frontend image:" $DOCKER_IMAGE_FRONTEND
